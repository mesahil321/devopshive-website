name: Build and Deploy to AWS Fargate

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Dependencies
        working-directory: ./devopshive-website
        run: npm ci

      - name: Build Next.js App
        working-directory: ./devopshive-website
        run: npm run build

      - name: Prepare Docker Build Context
        run: |
          mkdir docker-build
          cp -r ./devopshive-website/.next docker-build/
          cp -r ./devopshive-website/public docker-build/
          cp -r ./devopshive-website/node_modules docker-build/
          cp ./devopshive-website/package.json docker-build/
          cp ./devopshive-website/next.config.js docker-build/ || true

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply (Create ECS cluster, Fargate infra)
        run: terraform apply -auto-approve
        working-directory: ./terraform

      - name: Get Terraform Outputs
        id: tf_outputs
        run: |
          echo "ECS_CLUSTER=$(terraform output -raw ecs_cluster_name)" >> $GITHUB_ENV
          echo "ECR_URL=$(terraform output -raw ecr_repo_url)" >> $GITHUB_ENV
        working-directory: ./terraform

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Docker Image to ECR
        env:
          ECR_URL: ${{ env.ECR_URL }}
        run: |
          IMAGE_TAG=${GITHUB_SHA}
          docker build -t $ECR_URL:$IMAGE_TAG docker-build
          docker push $ECR_URL:$IMAGE_TAG


          docker tag $ECR_URL:$IMAGE_TAG $ECR_URL:latest
          docker push $ECR_URL:latest
